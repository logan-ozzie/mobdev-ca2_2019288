{"version":3,"sources":["src/app/pages/episode-details/episode-details.page.html","src/app/pages/episode-details/episode-details-routing.module.ts","src/app/pages/episode-details/episode-details.module.ts","src/app/pages/episode-details/episode-details.page.scss","src/app/pages/episode-details/episode-details.page.ts","src/app/services/api.service.ts","src/app/services/favourite.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    \\n    <ion-buttons slot=\\\"start\\\" defaultHref=\\\"/tabs/episodes\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>{{ episode?.title }}</ion-title>  <!-- {{ episode.title }} -->\\n    <ion-buttons slot=\\\"end\\\">\\n    \\n      <ion-button (click)=\\\"unfavoriteepisode()\\\" *ngIf=\\\"isFavorite\\\">\\n        <ion-icon name=\\\"star\\\" slot=\\\"icon-only\\\" color=\\\"secondary\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button (click)=\\\"favoriteepisode()\\\" *ngIf=\\\"!isFavorite\\\">\\n        <ion-icon name=\\\"star-outline\\\" slot=\\\"icon-only\\\" color=\\\"secondary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-card *ngIf=\\\"episode\\\" class=\\\"movie-card\\\">\\n    <ion-card-header>Episode {{ episode?.season }}: {{ episode?.episode }}</ion-card-header>\\n    <ion-card-content>\\n      {{ episode?.season }}\\n    </ion-card-content>\\n    <ion-item class=\\\"movie-info\\\" lines=\\\"none\\\">\\n      <ion-icon name=\\\"episode\\\" slot=\\\"start\\\"></ion-icon>\\n      Director: {{ episode?.season }}\\n    </ion-item>\\n    <ion-item class=\\\"movie-info\\\" lines=\\\"none\\\">\\n      <ion-icon name=\\\"calendar\\\" slot=\\\"start\\\"></ion-icon>\\n      Release Date: {{ episode?.air_date }}\\n    </ion-item>\\n  </ion-card>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EpisodeDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EpisodeDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EpisodeDetailsPageRoutingModule } from './episode-details-routing.module';\n\nimport { EpisodeDetailsPage } from './episode-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EpisodeDetailsPageRoutingModule\n  ],\n  declarations: [EpisodeDetailsPage]\n})\nexport class EpisodeDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2VwaXNvZGUtZGV0YWlscy9lcGlzb2RlLWRldGFpbHMucGFnZS5zY3NzIn0= */\"","import { FavouriteService } from './../../services/favourite.service';\nimport { ApiService } from './../../services/api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-episode-details',\n  templateUrl: './episode-details.page.html',\n  styleUrls: ['./episode-details.page.scss'],\n})\n\nexport class EpisodeDetailsPage implements OnInit {\n\n    episode: any;\t\n  isFavourite = false;\n    episodeId = null;\n\n // constructor(private activatedRoute: ActivatedRoute, private api: ApiService) {}\n   constructor(private activatedRoute: ActivatedRoute, private api: ApiService, private favouriteService: FavouriteService) { } \n\n  ngOnInit() {\n    this.episodeId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.api.getEpisode(this.episodeId).subscribe(res => {\n      this.episode = res[0];\n    });\n\n    this.favouriteService.isFavourite(this.episodeId).then(isFav => {\n      this.isFavourite = isFav;\n    });\n  }\n \n  favouriteFilm() {\n    this.favouriteService.favouriteFilm(this.episodeId).then(() => {\n      this.isFavourite = true;\n    });\n  }\n \n  unfavouriteFilm() {\n    this.favouriteService.unfavouriteFilm(this.episodeId).then(() => {\n      this.isFavourite = false;\n    });\n\n\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n    constructor(private http: HttpClient) { }\n\n    getEpisodes() {\n        return this.http.get('http://www.breakingbadapi.com/api/episodes')\n    }\n\n    getEpisode(id) {\n        return this.http.get(`http://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters() {\n        return this.http.get('http://www.breakingbadapi.com/api/characters')\n    }\n\n    getCharacter(id) {\n        return this.http.get(`http://www.breakingbadapi.com/api/characters/${id}`);\n    }\n    getQuotes() {\n        return this.http.get('http://www.breakingbadapi.com/api/quotes')\n    }\n\n    getQuote(id) {\n        return this.http.get(`http://www.breakingbadapi.com/api/quotes/${id}`);\n    }\n\n    getDeaths() {\n   //     return this.http.get(`http://www.breakingbadapi.com/api/death-count?name=Gustavo+Fring`)\n        return this.http.get(`http://www.breakingbadapi.com/api/deaths`)\n    }\n\n    getDeath(id) {\n        return this.http.get(`http://www.breakingbadapi.com/api/deaths/${id}`)\n    }\n\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n \nconst STORAGE_KEY = 'favouriteFilms';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class FavouriteService {\n \n  constructor(private storage: Storage) { }\n \n  getAllFavouriteFilms() {\n    return this.storage.get(STORAGE_KEY);\n  }\n \n  isFavourite(episodeId) {\n    return this.getAllFavouriteFilms().then(result => {\n      return result && result.indexOf(episodeId) !== -1;\n    });\n  }\n \n  favouriteFilm(episodeId) {\n    return this.getAllFavouriteFilms().then(result => {\n      if (result) {\n        result.push(episodeId);\n        return this.storage.set(STORAGE_KEY, result);\n      } else {\n        return this.storage.set(STORAGE_KEY, [episodeId]);\n      }\n    });\n  }\n \n  unfavouriteFilm(episodeId) {\n    return this.getAllFavouriteFilms().then(result => {\n      if (result) {\n        var index = result.indexOf(episodeId);\n        result.splice(index, 1);\n        return this.storage.set(STORAGE_KEY, result);\n      }\n    });\n  }\n \n}"],"sourceRoot":"webpack:///","file":"episode-details-episode-details-module-es5.js"}